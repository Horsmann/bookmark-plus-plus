package org.eclipselabs.recommenders.bookmark.tests;

import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertFalse;
import static org.junit.Assert.assertTrue;

import org.eclipselabs.recommenders.bookmark.tree.BMNode;
import org.eclipselabs.recommenders.bookmark.tree.TreeNode;
import org.eclipselabs.recommenders.bookmark.tree.persistent.GsonConverter;
import org.eclipselabs.recommenders.bookmark.tree.persistent.deserialization.RestoredTree;
import org.eclipselabs.recommenders.bookmark.tree.persistent.deserialization.TreeDeserializer;
import org.eclipselabs.recommenders.bookmark.tree.persistent.deserialization.TreeDeserializerFacade;
import org.eclipselabs.recommenders.bookmark.tree.util.TreeUtil;
import org.junit.Test;

public class TreeDeserializerTest
{

	@Test
	public void testDeserialization()
	{
		String serializedTree = getSerializedTree();

		RestoredTree restoredTree = TreeDeserializer.deSerializeTree(
				serializedTree, new GsonConverter());

		TreeNode root = restoredTree.getRoot();
		assertEquals(1, root.getChildren().length);
		assertTrue(root.getChildren()[0].isAutoGenerated());
		
		BMNode bookmark = root.getChildren()[0];
		assertTrue(bookmark.isBookmarkNode());
		assertEquals(2, bookmark.getChildren().length);
		
		BMNode leaf = TreeUtil.getLeafOfTreePath(bookmark.getChildren()[0]);
		assertFalse(leaf.isAutoGenerated());
		
		leaf = bookmark.getChildren()[1];
		assertFalse(leaf.isAutoGenerated());

	}

	public String getSerializedTree()
	{
		return "{\"isExpanded\":false,\"children\":[{\"isExpanded\":true,\"children\":[{\"isExpanded\":true,\"children\":[{\"isExpanded\":true,\"children\":[{\"isExpanded\":false,\"children\":[],\"value\":\"\u003dLKJLD/src\u003ctest.project{MyEnum.java[MyEnum^SATURDAY\",\"isBookmarkNode\":false,\"isAutoGenerated\":false}],\"value\":\"\u003dLKJLD/src\u003ctest.project{MyEnum.java[MyEnum\",\"isBookmarkNode\":false,\"isAutoGenerated\":true}],\"value\":\"\u003dLKJLD/src\u003ctest.project{MyEnum.java\",\"isBookmarkNode\":false,\"isAutoGenerated\":true},{\"isExpanded\":false,\"children\":[],\"value\":\"../LKJLD/testfile.txt\",\"isBookmarkNode\":false,\"isAutoGenerated\":false}],\"value\":\"oben\",\"isBookmarkNode\":true,\"isAutoGenerated\":true}],\"value\":\"\",\"isBookmarkNode\":false,\"isAutoGenerated\":true}";
	}

	@Test
	public void testDeserializationFacade()
	{
		String serializedTree = getSerializedTree();
		RestoredTree restoredTree = TreeDeserializerFacade
				.deserialize(serializedTree);
		
		TreeNode root = restoredTree.getRoot();
		assertEquals(1, root.getChildren().length);
		assertTrue(root.getChildren()[0].isAutoGenerated());
		
		BMNode bookmark = root.getChildren()[0];
		assertTrue(bookmark.isBookmarkNode());
		assertEquals(2, bookmark.getChildren().length);
		
		BMNode leaf = TreeUtil.getLeafOfTreePath(bookmark.getChildren()[0]);
		assertFalse(leaf.isAutoGenerated());
		
		leaf = bookmark.getChildren()[1];
		assertFalse(leaf.isAutoGenerated());
	}

}
